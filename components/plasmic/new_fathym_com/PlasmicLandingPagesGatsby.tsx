// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jbURxL3XuiMBQsLhf7apui
// Component: nlWEqtNh3DK
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: C-c1_GprIs0E/component
import Button from "../../Button"; // plasmic-import: PDN2xmv-0aRn/component
import Section from "../../Section"; // plasmic-import: pqxD5V2UHfS3/component
import ValueProp from "../../ValueProp"; // plasmic-import: w1ZnbKd31u0d/component
import Banner from "../../Banner"; // plasmic-import: 5SnsQScnhaLp/component
import PriceCard from "../../PriceCard"; // plasmic-import: WPq9gUgwYyDn/component
import HabistackFooter from "../../HabistackFooter"; // plasmic-import: GpokPUrpKl/component

import { useScreenVariants as useScreenVariantsbzFq34BwReL2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BzFq34bwReL2/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_fathym_com.module.css"; // plasmic-import: jbURxL3XuiMBQsLhf7apui/projectcss
import sty from "./PlasmicLandingPagesGatsby.module.css"; // plasmic-import: nlWEqtNh3DK/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: lodHYqINbTbi/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: B6LQdT961rE8/icon
import HammerIcon from "./icons/PlasmicIcon__Hammer"; // plasmic-import: ZuOYCAXGTqWV/icon
import TargetIcon from "./icons/PlasmicIcon__Target"; // plasmic-import: rLVg9ppMbHmc/icon
import FastIcon from "./icons/PlasmicIcon__Fast"; // plasmic-import: R_OTBeuKYlSh/icon
import StrongIcon from "./icons/PlasmicIcon__Strong"; // plasmic-import: xG-_Nh8HQ7l8/icon

export type PlasmicLandingPagesGatsby__VariantMembers = {};

export type PlasmicLandingPagesGatsby__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingPagesGatsby__VariantsArgs;
export const PlasmicLandingPagesGatsby__VariantProps =
  new Array<VariantPropType>();

export type PlasmicLandingPagesGatsby__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPagesGatsby__ArgsType;
export const PlasmicLandingPagesGatsby__ArgProps = new Array<ArgPropType>();

export type PlasmicLandingPagesGatsby__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  foreground?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
  foreground2?: p.Flex<"div">;
  valuePropsSection?: p.Flex<typeof Section>;
  banner?: p.Flex<typeof Banner>;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  habistackFooter?: p.Flex<typeof HabistackFooter>;
};

export interface DefaultLandingPagesGatsbyProps {}

function PlasmicLandingPagesGatsby__RenderFunc(props: {
  variants: PlasmicLandingPagesGatsby__VariantsArgs;
  args: PlasmicLandingPagesGatsby__ArgsType;
  overrides: PlasmicLandingPagesGatsby__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbzFq34BwReL2()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">
          {"Fathym - Gatsby Development & Deployments in record time"}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={"Fathym - Gatsby Development & Deployments in record time"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__qr4Uy)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sGuZd
                )}
              >
                {"Gatsby Deployments\nwith Fathym"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cZfq4
                )}
              >
                {
                  "Create, build, and deploy your next JAMStack app with Gatsby on Fathym"
                }
              </div>
            </p.Stack>

            <p.PlasmicImg
              data-plasmic-name={"img"}
              data-plasmic-override={overrides.img}
              alt={""}
              className={classNames(sty.img)}
              displayHeight={"293px" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"auto" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/new_fathym_com/images/image17.png",
                fullWidth: 400,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground2"}
              data-plasmic-override={overrides.foreground2}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground2)}
            >
              <div className={classNames(projectcss.all, sty.columns__lfG17)}>
                <div className={classNames(projectcss.all, sty.column__cwI0E)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__tvsJe)}
                    color={"blue" as const}
                    link={
                      "/dashboard/create-project?recipeId=00000000-0000-0000-0000-000000000006" as const
                    }
                  >
                    {"Get Started for Free"}
                  </Button>
                </div>

                <div className={classNames(projectcss.all, sty.column__hyBr5)}>
                  <p.PlasmicLink
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      projectcss.__wab_text,
                      sty.link__aRhRz
                    )}
                    component={Link}
                    href={
                      "/docs/guides/deploying/site-builders/gatsby" as const
                    }
                    platform={"nextjs"}
                  >
                    {"Learn more >"}
                  </p.PlasmicLink>
                </div>
              </div>
            </p.Stack>

            {true ? (
              <Section
                data-plasmic-name={"valuePropsSection"}
                data-plasmic-override={overrides.valuePropsSection}
                className={classNames("__wab_instance", sty.valuePropsSection)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qYXmE)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__dxS5Q)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__wBgK
                      )}
                    >
                      {"See how Gatsby Compares"}
                    </h2>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yNwSo
                    )}
                  >
                    {
                      "Looking for the right framework for your next JAMStack example, tutorial or project?  Deploy Gatsby alongside any number of additional frameworks, get a feel for the development experience, and see how they perform.  Host your Gatsby app free with Fathym's micro frontend framework."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kO3Mc)}
                >
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nuOoY)}
                    >
                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__zyIf6
                        )}
                        description={
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___7JBps
                              )}
                            >
                              {
                                "Learn one way to build applications with Angular and reuse your code and abilities to build apps for any deployment target. Deploy your Angular app now."
                              }
                            </div>

                            <Button link={"/angular" as const}>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jdeqj
                                )}
                              >
                                {"Angular Deployments >"}
                              </div>
                            </Button>
                          </React.Fragment>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__pRoFq
                            )}
                            role={"img"}
                          />
                        }
                        title={"React vs Angular"}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__rADb
                        )}
                        description={
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3S3Nz
                              )}
                            >
                              {
                                "The progressive javascript framework.  Already know HTML, CSS and JavaScript? Read the guide and start deploying VueJS apps in no time!               \n"
                              }
                            </div>

                            <Button link={"/vue" as const}>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wpbfw
                                )}
                              >
                                {"Vue Deployments >"}
                              </div>
                            </Button>
                          </React.Fragment>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__kGfcg
                            )}
                            role={"img"}
                          />
                        }
                        title={"React vs VueJS"}
                      />

                      <ValueProp
                        className={classNames(
                          "__wab_instance",
                          sty.valueProp__fWlrQ
                        )}
                        description={
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ffAD
                              )}
                            >
                              {
                                "Whereas traditional frameworks like React and Vue do the bulk of their work in the browser, Svelte shifts that work into a compile step that happens when you build your app."
                              }
                            </div>

                            <Button link={"/svelte-deployment" as const}>
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dSwI
                                )}
                              >
                                {"Svelte Deployments >"}
                              </div>
                            </Button>
                          </React.Fragment>
                        }
                        flatIcon={true}
                        icon={
                          <CheckIcon
                            className={classNames(projectcss.all, sty.svg__fS9)}
                            role={"img"}
                          />
                        }
                        title={"React vs Svelte"}
                      />
                    </p.Stack>
                  ) : null}
                </p.Stack>
              </Section>
            ) : null}

            <Banner
              data-plasmic-name={"banner"}
              data-plasmic-override={overrides.banner}
              className={classNames("__wab_instance", sty.banner)}
              left={
                <React.Fragment>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bzlUu
                    )}
                  >
                    {"Gatsby Example Tutorial"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__p2NTv
                    )}
                  >
                    {"Do it Yourself"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ciVwm
                    )}
                  >
                    {
                      "Get started now and deploy your Gatsby app to production following the simple deployment guide. Have your Gatsby micro frontend hosted on your domain in minutes."
                    }
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns__jGQr)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__fEaxU)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__lnvaD
                        )}
                        color={"blue" as const}
                        link={
                          "/dashboard/create-project?recipeId=00000000-0000-0000-0000-000000000006" as const
                        }
                      >
                        {"Get Started for Free"}
                      </Button>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__zypuv)}
                    >
                      <Button
                        link={
                          "/docs/guides/deploying/site-builders/gatsby" as const
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__atVt6
                          )}
                        >
                          {"Read Documentation >"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </React.Fragment>
              }
            />
          </p.Stack>

          {true ? (
            <section
              data-plasmic-name={"section"}
              data-plasmic-override={overrides.section}
              className={classNames(projectcss.all, sty.section)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground3"}
                data-plasmic-override={overrides.foreground3}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground3)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2PQv5)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2Yy6B)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__h9Lz
                      )}
                    >
                      {"Why deploy Gatsby?"}
                    </h2>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wWjQw
                    )}
                  >
                    {
                      "Gatsby is the fast and flexible framework that makes building websites with any CMS, API, or database fun again. Build and deploy headless websites that drive more traffic, convert better, and earn more revenue!\n\nA full-stack frontend framework that comes with everything you need out of the box."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hNaf)}
                >
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns__p10Ip)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__kWfVm
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__gHlbn
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lN4X
                              )}
                            >
                              {
                                "Nulla odio mauris enim parturient adipiscing vestibulum inceptos."
                              }
                            </div>
                          }
                          icon={
                            <HammerIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ilY6T
                              )}
                              role={"img"}
                            />
                          }
                          title={"Harder"}
                          vertical={true}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__w5H6T
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__aSi6N
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1LuP8
                              )}
                            >
                              {
                                "Consequat scelerisque a eros taciti nisl a sodales."
                              }
                            </div>
                          }
                          icon={
                            <TargetIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__xla0R
                              )}
                              role={"img"}
                            />
                          }
                          title={"Better"}
                          vertical={true}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__sAsCz
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___19HuW
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nQsk3
                              )}
                            >
                              {
                                "Varius ad malesuada ullamcorper cursus scelerisque a a."
                              }
                            </div>
                          }
                          icon={
                            <FastIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__t2Yu4
                              )}
                              role={"img"}
                            />
                          }
                          title={"Faster"}
                          vertical={true}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__reUJt
                        )}
                      >
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__qryml
                          )}
                          darkBackground={true}
                          description={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__vk3Q2
                              )}
                            >
                              {
                                "Ut eu nam nostra taciti congue adipiscing curabitur."
                              }
                            </div>
                          }
                          icon={
                            <StrongIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__c3TJs
                              )}
                              role={"img"}
                            />
                          }
                          title={"Stronger"}
                          vertical={true}
                        />
                      </div>
                    </p.Stack>
                  ) : null}
                </p.Stack>

                <div className={classNames(projectcss.all, sty.columns__afYm5)}>
                  <div
                    className={classNames(projectcss.all, sty.column__odFo7)}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__krAxB
                      )}
                      color={"blue" as const}
                      link={
                        "/dashboard/create-project?recipeId=00000000-0000-0000-0000-000000000006" as const
                      }
                    >
                      {"Get Started for Free"}
                    </Button>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__tchFx)}
                  >
                    <p.PlasmicLink
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__t9RlH
                      )}
                      component={Link}
                      href={
                        "/docs/guides/deploying/site-builders/gatsby" as const
                      }
                      platform={"nextjs"}
                    >
                      {"Learn more >"}
                    </p.PlasmicLink>
                  </div>
                </div>
              </p.Stack>
            </section>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__lvoxc)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3Stih)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tL9Rn)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wAiyR)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nzzR2
                      )}
                    >
                      {"Pricing plans"}
                    </div>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cy0G8
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__tsiKn)}
                >
                  <PriceCard
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__fNuH
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__cmX7A
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__or55T
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__muGj5
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___9Khhs
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"0"}
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b0OU4
                        )}
                      >
                        {"Buy Pro"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__dnm1C
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__rCbpK
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gtq1E
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__yuEoS
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__c1Iy1
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__x6Xux
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lZxCs
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"8"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zzLu6
                        )}
                      >
                        {"Pro"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zqJ3W
                        )}
                      >
                        {"Buy Team"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__xlKS
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__sg3Xc
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__o3XRu
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__vd8AV
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__imEqi
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__bXfxm
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__m6D1I
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ipej
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mNnm1
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"16"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d6MkQ
                        )}
                      >
                        {"Team"}
                      </div>
                    }
                  />

                  <PriceCard
                    action={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xNutd
                        )}
                      >
                        {"Contact us"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.priceCard__st9CN
                    )}
                    description={
                      <React.Fragment>
                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__ewHoV
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___0XDRg
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__xo6Lk
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oomMw
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp__kx9Lm
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ecQax
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />

                        <ValueProp
                          className={classNames(
                            "__wab_instance",
                            sty.valueProp___0EluE
                          )}
                          description={"Nulla odio mauris."}
                          flatIcon={true}
                          icon={
                            <CheckIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ljn51
                              )}
                              role={"img"}
                            />
                          }
                          noTitle={true}
                        />
                      </React.Fragment>
                    }
                    dollars={"?"}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___6CF7Q
                        )}
                      >
                        {"Enterprise"}
                      </div>
                    }
                    primary={true}
                  />
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}

          <HabistackFooter
            data-plasmic-name={"habistackFooter"}
            data-plasmic-override={overrides.habistackFooter}
            className={classNames("__wab_instance", sty.habistackFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "foreground",
    "img",
    "foreground2",
    "valuePropsSection",
    "banner",
    "section",
    "foreground3",
    "habistackFooter"
  ],
  navbar: ["navbar"],
  foreground: ["foreground"],
  img: ["img"],
  foreground2: ["foreground2"],
  valuePropsSection: ["valuePropsSection"],
  banner: ["banner"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  habistackFooter: ["habistackFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  foreground: "div";
  img: typeof p.PlasmicImg;
  foreground2: "div";
  valuePropsSection: typeof Section;
  banner: typeof Banner;
  section: "section";
  foreground3: "div";
  habistackFooter: typeof HabistackFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPagesGatsby__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPagesGatsby__VariantsArgs;
    args?: PlasmicLandingPagesGatsby__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPagesGatsby__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicLandingPagesGatsby__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicLandingPagesGatsby__ArgProps,
      internalVariantPropNames: PlasmicLandingPagesGatsby__VariantProps
    });

    return PlasmicLandingPagesGatsby__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingPagesGatsby";
  } else {
    func.displayName = `PlasmicLandingPagesGatsby.${nodeName}`;
  }
  return func;
}

export const PlasmicLandingPagesGatsby = Object.assign(
  // Top-level PlasmicLandingPagesGatsby renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    foreground: makeNodeComponent("foreground"),
    img: makeNodeComponent("img"),
    foreground2: makeNodeComponent("foreground2"),
    valuePropsSection: makeNodeComponent("valuePropsSection"),
    banner: makeNodeComponent("banner"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    habistackFooter: makeNodeComponent("habistackFooter"),

    // Metadata about props expected for PlasmicLandingPagesGatsby
    internalVariantProps: PlasmicLandingPagesGatsby__VariantProps,
    internalArgProps: PlasmicLandingPagesGatsby__ArgProps
  }
);

export default PlasmicLandingPagesGatsby;
/* prettier-ignore-end */
