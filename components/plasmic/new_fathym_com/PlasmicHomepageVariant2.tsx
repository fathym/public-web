// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jbURxL3XuiMBQsLhf7apui
// Component: uslE6cORX7L
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: C-c1_GprIs0E/component
import Button from "../../Button"; // plasmic-import: PDN2xmv-0aRn/component
import PriceCard from "../../PriceCard"; // plasmic-import: WPq9gUgwYyDn/component
import ValueProp from "../../ValueProp"; // plasmic-import: w1ZnbKd31u0d/component
import HabistackFooter from "../../HabistackFooter"; // plasmic-import: GpokPUrpKl/component

import { useScreenVariants as useScreenVariantsbzFq34BwReL2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BzFq34bwReL2/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_fathym_com.module.css"; // plasmic-import: jbURxL3XuiMBQsLhf7apui/projectcss
import sty from "./PlasmicHomepageVariant2.module.css"; // plasmic-import: uslE6cORX7L/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: lodHYqINbTbi/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: gpmIqNjGKjYR/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: B6LQdT961rE8/icon

export type PlasmicHomepageVariant2__VariantMembers = {};

export type PlasmicHomepageVariant2__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepageVariant2__VariantsArgs;
export const PlasmicHomepageVariant2__VariantProps =
  new Array<VariantPropType>();

export type PlasmicHomepageVariant2__ArgsType = {};
type ArgPropType = keyof PlasmicHomepageVariant2__ArgsType;
export const PlasmicHomepageVariant2__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepageVariant2__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  learnMore?: p.Flex<"a"> & Partial<LinkProps>;
  ol?: p.Flex<"ol">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  habistackFooter?: p.Flex<typeof HabistackFooter>;
};

export interface DefaultHomepageVariant2Props {}

function PlasmicHomepageVariant2__RenderFunc(props: {
  variants: PlasmicHomepageVariant2__VariantsArgs;
  args: PlasmicHomepageVariant2__ArgsType;
  overrides: PlasmicHomepageVariant2__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbzFq34BwReL2()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">
          {"Fathym - Develop & Deploy modern web experiences with your team"}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={
            "Fathym - Develop & Deploy modern web experiences with your team"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__dZIg)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___4JB8L)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yclle)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__vJAmc)}>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.columns__dw4R)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__qImUc)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jbp5J
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bgER
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iCzwf
                            )}
                          >
                            {
                              "Deliver stunning sites with the utmost flexibility and speed"
                            }
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___9Ncbn
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>{""}</React.Fragment>
                              <h2
                                className={classNames(
                                  projectcss.all,
                                  projectcss.h2,
                                  projectcss.__wab_text,
                                  sty.h2___4O9Ov
                                )}
                              >
                                {
                                  "Frontend developers use Fathym to host, manage and deploy Jamstack sites and web applications with the flexibility and speed the modern web demands. "
                                }
                              </h2>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.columns__ygrE
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column__vrWJm
                              )}
                            >
                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__lqhIw
                                )}
                                color={
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? ("blue" as const)
                                    : ("blue" as const)
                                }
                                endIcon={
                                  <ChevronRightIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__s48Gj
                                    )}
                                    role={"img"}
                                  />
                                }
                                link={
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? ("/dashboard/create-project" as const)
                                    : ("/dashboard" as const)
                                }
                                showEndIcon={
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? true
                                    : true
                                }
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__iehFv
                                  )}
                                >
                                  {"Get Started for Free"}
                                </div>
                              </Button>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.column___4HY6J
                              )}
                            >
                              <p.PlasmicLink
                                data-plasmic-name={"learnMore"}
                                data-plasmic-override={overrides.learnMore}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  sty.learnMore
                                )}
                                component={Link}
                                href={"/docs" as const}
                                platform={"nextjs"}
                                target={"_blank" as const}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__uqgMe
                                  )}
                                >
                                  {"Learn more >"}
                                </div>
                              </p.PlasmicLink>
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__fAeOf)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__aivs)}
                        displayHeight={"491px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/socialFeedDashboardpng.png",
                          fullWidth: 1400,
                          fullHeight: 1486,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </p.Stack>
                </div>
              </p.Stack>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__nQx3L)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___10Kjo)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__yoyI0
                )}
              >
                {"Say goodbye to unwieldy frontend monoliths."}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__aml0A
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      " \n\nFathym automates builds, hosting and deployment so you can focus on building Jamstack sites or Single Page Applications with the JavaScript frameworks and Static Site Generators you love. \n\nSteer clear of unwieldly frontend monoliths.\n\nBreak your website down into smaller, flexible and more manageable pieces for "
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"independent builds and deployments"}
                  </span>
                  <React.Fragment>{". "}</React.Fragment>
                </React.Fragment>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__owOzA)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__snPa
              )}
            >
              {"TAKE THE FATHYM JOURNEY"}
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__yToSt)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___4D0Ej)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__p6Cdd
                )}
              >
                {"1. Start with your code"}
              </h1>

              <div className={classNames(projectcss.all, sty.columns__anwWz)}>
                <div className={classNames(projectcss.all, sty.column___7FFd)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aK0D
                    )}
                  >
                    {
                      "Getting started is as simple as connecting your GitHub repository. \n\nSelect an open-source recipe from your favourite frameworks and Static Site Builders to see Fathym in action or bring in your own code."
                    }
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__fFlrQ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.columns__eoqe6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__p5Umo
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__zGuew
                          )}
                        >
                          {"Your code"}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wYiiH
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "Bring your sites and applications that you already have in "
                              }
                            </React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700 }}
                            >
                              {"GitHub"}
                            </span>
                            <React.Fragment>{" or "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700 }}
                            >
                              {"NPM"}
                            </span>
                            <React.Fragment>{"."}</React.Fragment>
                          </React.Fragment>
                        </div>

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___2Dtny
                          )}
                        >
                          {"Build and deploy"}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tojJb
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {"Let us handle the "}
                            </React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700 }}
                            >
                              {"automated build pipelines and deployments "}
                            </span>
                            <React.Fragment>
                              {
                                "behind the scenes so you can stick to the good stuff."
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__kZKoU
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__ryO1V)}
                          displayHeight={"364px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/new_fathym_com/images/getStartedWithATemplatePng.png",
                            fullWidth: 1724,
                            fullHeight: 1472,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__wgToi)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ok7Ef)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__uglUb
                )}
              >
                {"2. Break it down"}
              </h1>

              {true ? (
                <div
                  className={classNames(projectcss.all, sty.columns___4GblX)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__gZwh5)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__avwzb
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "Break website projects down into smaller apps with individual repositories and automated build pipelines for:  \n\n"
                          }
                        </React.Fragment>
                        <ol
                          data-plasmic-name={"ol"}
                          data-plasmic-override={overrides.ol}
                          className={classNames(
                            projectcss.all,
                            projectcss.ol,
                            sty.ol
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__qq2R2
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"smaller, more cohesive, decoupled "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700 }}
                              >
                                {"codebases"}
                              </span>
                              <React.Fragment>{" \n"}</React.Fragment>
                            </React.Fragment>
                          </li>

                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__bpRua
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"smaller, faster "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700 }}
                              >
                                {"builds "}
                              </span>
                              <React.Fragment>{"\n"}</React.Fragment>
                            </React.Fragment>
                          </li>

                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__qi0V5
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"simple testing, version control, "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700 }}
                              >
                                {"release management"}
                              </span>
                              <React.Fragment>{" \n"}</React.Fragment>
                            </React.Fragment>
                          </li>

                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__x567C
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"incremental upgrades and independent "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700 }}
                              >
                                {"deployments "}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </li>
                        </ol>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              ) : null}

              <div className={classNames(projectcss.all, sty.columns__aeZrG)}>
                <div className={classNames(projectcss.all, sty.column__tsZN)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__shzg3
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__rZuBw
                        )}
                      >
                        {"You're a composer"}
                      </h3>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zg7Zv
                    )}
                  >
                    {
                      "Build with the freedom to use different JavaScript frameworks or Static Site Generators on the one site. Use the right framework for the right job.  \n\nFathym effortlessly brings your project’s apps together to compose one cohesive website or web app on your custom domain. "
                    }
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column___0QuNr)}>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__eMjOw)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/new_fathym_com/images/homeRoutespng3.png",
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__cGo34)}>
            <div className={classNames(projectcss.all, sty.freeBox__uaXaw)}>
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__meclb
                )}
              >
                {"3. Deploy with confidence"}
              </h1>

              <div className={classNames(projectcss.all, sty.columns__xdHKp)}>
                <div className={classNames(projectcss.all, sty.column__bhMmI)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mc3FI
                    )}
                  >
                    {
                      "The Fathym Global Edge Network delivers your content and sites at global points closest to your users.  \n\n"
                    }
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__b30D)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kg0H
                    )}
                  >
                    {
                      "Update to any version of your site through our version control, and easily rollback when things go awry. "
                    }
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__gtKs)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kGaun)}
            >
              <h1
                className={classNames(
                  projectcss.all,
                  projectcss.h1,
                  projectcss.__wab_text,
                  sty.h1__tsnhg
                )}
              >
                {"4. Scale as you grow"}
              </h1>

              <div className={classNames(projectcss.all, sty.columns___72XVq)}>
                <div className={classNames(projectcss.all, sty.column__dociy)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jPzIb
                    )}
                  >
                    {
                      "Get started for free in a shared infrastructure environment built to scale with you and your customer's needs."
                    }
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__eY3L8)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cK42J
                    )}
                  >
                    {
                      "Outgrown Fathym's shared infrastructure?\n\nEmploy all the same great tools from your own private or managed clouds."
                    }
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__miqAn)}
              >
                <div className={classNames(projectcss.all, sty.freeBox___0thF)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__vem8O
                    )}
                  >
                    {"Why deploy with Fathym?"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__c7SrJ
                  )}
                >
                  {
                    "Fathym's powerful micro frontends allow work to be divided and conquered concurrently. Virtual developers handle the heavy lifting of the hosting and DevOps automation, saving both time and money. Plus, the ability to use multiple frameworks!\n\nDiscover new ways to maximize resources and knowledge from your team with your code, low code, and no code tools. Harness solutions from the open source universe or developed by your team."
                  }
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.columns__hYaZy)}>
                <div className={classNames(projectcss.all, sty.column__t8VBq)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__f1Aqs)}
                    color={"blue" as const}
                    link={"/dashboard" as const}
                  >
                    {"Get Started for Free"}
                  </Button>
                </div>
              </div>
            </p.Stack>
          </section>

          {true ? (
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oVxm)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__dRz3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ub7Gc)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ugi2W)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hAbe
                        )}
                      >
                        {"Pricing plans"}
                      </div>
                    </div>
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lvfcz)}
                  >
                    <PriceCard
                      action={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mtgca
                          )}
                        >
                          {"Start for free"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard__bN9Db
                      )}
                      description={
                        <React.Fragment>
                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__cKAg
                            )}
                            description={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___3GceM
                                )}
                              >
                                {"Unlimited Projects"}
                              </div>
                            }
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__e8Ntg
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__ceq4N
                            )}
                            description={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ywrXy
                                )}
                              >
                                {"Team Social Feed"}
                              </div>
                            }
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xsKOr
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp___52U
                            )}
                            description={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__cW8Un
                                )}
                              >
                                {"Deploy any Version"}
                              </div>
                            }
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__aLC4
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__lKorr
                            )}
                            description={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__u4GQ
                                )}
                              >
                                {"Custom Domain"}
                              </div>
                            }
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xC4Z9
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__muGj5
                            )}
                            description={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dLGkV
                                )}
                              >
                                {"Free SSL"}
                              </div>
                            }
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qNDi
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />
                        </React.Fragment>
                      }
                      dollars={"0"}
                    />

                    <PriceCard
                      action={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__h4Qzr
                          )}
                        >
                          {"Buy Personal"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard__tx2JV
                      )}
                      description={
                        <React.Fragment>
                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__cdxsq
                            )}
                            description={"Starter plan, plus:"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__szob7
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__vGtWy
                            )}
                            description={"Single Sign-on and Access Control"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uyjNg
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__yuEoS
                            )}
                            description={"Application  Modifiers"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ndLu2
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__x6Xux
                            )}
                            description={"Server-less Functions"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__eQ2HX
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />
                        </React.Fragment>
                      }
                      dollars={"8"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4UVzp
                          )}
                        >
                          {"personal"}
                        </div>
                      }
                    />

                    <PriceCard
                      action={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__torBy
                          )}
                        >
                          {"Buy Pro"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard__mr11H
                      )}
                      description={
                        <React.Fragment>
                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__fM7Du
                            )}
                            description={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___5WkUd
                                )}
                              >
                                {"Personal plan, plus:"}
                              </div>
                            }
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__er88R
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__vd8AV
                            )}
                            description={"Branded Custom Single Sign-on"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___8MZGu
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__bXfxm
                            )}
                            description={"Affiliate White-labeling"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__dhQzX
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__ipej
                            )}
                            description={"Priority Support"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__giUdb
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />
                        </React.Fragment>
                      }
                      dollars={"30"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ayQ6G
                          )}
                        >
                          {"pro"}
                        </div>
                      }
                    />

                    <PriceCard
                      action={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__uyykv
                          )}
                        >
                          {"Buy Business"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCard__xAg6L
                      )}
                      description={
                        <React.Fragment>
                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__cTcb
                            )}
                            description={"Pro plan, plus:"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__iHmt1
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__xo6Lk
                            )}
                            description={"Customer Licensing Tools"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__gVt9Z
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp__kx9Lm
                            )}
                            description={"Enterprise White Labeling"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qIw3V
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />

                          <ValueProp
                            className={classNames(
                              "__wab_instance",
                              sty.valueProp___0EluE
                            )}
                            description={"Cloud Cost Management"}
                            flatIcon={true}
                            icon={
                              <CheckIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___9KCyK
                                )}
                                role={"img"}
                              />
                            }
                            noTitle={true}
                          />
                        </React.Fragment>
                      }
                      dollars={"99"}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__w63Dc
                          )}
                        >
                          {"business"}
                        </div>
                      }
                    />
                  </p.Stack>
                </p.Stack>
              ) : null}
            </p.Stack>
          ) : null}

          <HabistackFooter
            data-plasmic-name={"habistackFooter"}
            data-plasmic-override={overrides.habistackFooter}
            className={classNames("__wab_instance", sty.habistackFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "learnMore",
    "ol",
    "section",
    "foreground3",
    "habistackFooter"
  ],
  navbar: ["navbar"],
  learnMore: ["learnMore"],
  ol: ["ol"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  habistackFooter: ["habistackFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  learnMore: "a";
  ol: "ol";
  section: "section";
  foreground3: "div";
  habistackFooter: typeof HabistackFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepageVariant2__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepageVariant2__VariantsArgs;
    args?: PlasmicHomepageVariant2__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepageVariant2__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepageVariant2__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepageVariant2__ArgProps,
      internalVariantPropNames: PlasmicHomepageVariant2__VariantProps
    });

    return PlasmicHomepageVariant2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepageVariant2";
  } else {
    func.displayName = `PlasmicHomepageVariant2.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepageVariant2 = Object.assign(
  // Top-level PlasmicHomepageVariant2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    learnMore: makeNodeComponent("learnMore"),
    ol: makeNodeComponent("ol"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    habistackFooter: makeNodeComponent("habistackFooter"),

    // Metadata about props expected for PlasmicHomepageVariant2
    internalVariantProps: PlasmicHomepageVariant2__VariantProps,
    internalArgProps: PlasmicHomepageVariant2__ArgProps
  }
);

export default PlasmicHomepageVariant2;
/* prettier-ignore-end */
