// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jbURxL3XuiMBQsLhf7apui
// Component: sAz_-C62Tws
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: C-c1_GprIs0E/component
import Button from "../../Button"; // plasmic-import: PDN2xmv-0aRn/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import PriceCard from "../../PriceCard"; // plasmic-import: WPq9gUgwYyDn/component
import ValueProp from "../../ValueProp"; // plasmic-import: w1ZnbKd31u0d/component
import FathymFooter from "../../FathymFooter"; // plasmic-import: 3jTJ0D37Jf/component

import { useScreenVariants as useScreenVariantsbzFq34BwReL2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BzFq34bwReL2/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_fathym_com.module.css"; // plasmic-import: jbURxL3XuiMBQsLhf7apui/projectcss
import sty from "./PlasmicPricing2.module.css"; // plasmic-import: sAz_-C62Tws/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: lodHYqINbTbi/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: gpmIqNjGKjYR/icon
import CheckIcon from "./icons/PlasmicIcon__Check"; // plasmic-import: B6LQdT961rE8/icon

export type PlasmicPricing2__VariantMembers = {};

export type PlasmicPricing2__VariantsArgs = {};
type VariantPropType = keyof PlasmicPricing2__VariantsArgs;
export const PlasmicPricing2__VariantProps = new Array<VariantPropType>();

export type PlasmicPricing2__ArgsType = {};
type ArgPropType = keyof PlasmicPricing2__ArgsType;
export const PlasmicPricing2__ArgProps = new Array<ArgPropType>();

export type PlasmicPricing2__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  learnMore?: p.Flex<"a"> & Partial<LinkProps>;
  reveal?: p.Flex<typeof Reveal>;
  getStarted?: p.Flex<"a"> & Partial<LinkProps>;
  personalPlan?: p.Flex<"a"> & Partial<LinkProps>;
  proPlan?: p.Flex<"a"> & Partial<LinkProps>;
  businessPlan?: p.Flex<"a"> & Partial<LinkProps>;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  fathymFooter?: p.Flex<typeof FathymFooter>;
};

export interface DefaultPricing2Props {}

function PlasmicPricing2__RenderFunc(props: {
  variants: PlasmicPricing2__VariantsArgs;
  args: PlasmicPricing2__ArgsType;
  overrides: PlasmicPricing2__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbzFq34BwReL2()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicPricing2.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicPricing2.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicPricing2.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicPricing2.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicPricing2.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicPricing2.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicPricing2.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicPricing2.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_library_plasmic_color_type_css.plasmic_tokens,
              sty.root
            )}
          >
            <Navbar
              data-plasmic-name={"navbar"}
              data-plasmic-override={overrides.navbar}
              className={classNames("__wab_instance", sty.navbar)}
            />

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__wpImF)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___21OHq)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__d6YqE)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rky81)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.columns__scn7L
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column___5CoMl
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nX4Ov
                            )}
                          >
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___1DfRo
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iCeae
                                )}
                              >
                                {"The open web's future."}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ejqwj
                                )}
                              >
                                {"Your Code. Low Code. No Code."}
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ajXvA
                                )}
                              >
                                {
                                  "Develop and deploy micro frontends in a headless, open world."
                                }
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.columns___8GgZ4
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.column__t1VjD
                                  )}
                                >
                                  <Button
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button___7DSox
                                    )}
                                    color={
                                      hasVariant(
                                        globalVariants,
                                        "screen",
                                        "mobileOnly"
                                      )
                                        ? ("blue" as const)
                                        : ("blue" as const)
                                    }
                                    endIcon={
                                      <ChevronRightIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__f3Fk8
                                        )}
                                        role={"img"}
                                      />
                                    }
                                    link={
                                      hasVariant(
                                        globalVariants,
                                        "screen",
                                        "mobileOnly"
                                      )
                                        ? ("/dashboard/create-project" as const)
                                        : ("/dashboard" as const)
                                    }
                                    showEndIcon={
                                      hasVariant(
                                        globalVariants,
                                        "screen",
                                        "mobileOnly"
                                      )
                                        ? true
                                        : true
                                    }
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__siPfE
                                      )}
                                    >
                                      {"Get Started for Free"}
                                    </div>
                                  </Button>
                                </div>

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.column__n3X2E
                                  )}
                                >
                                  <p.PlasmicLink
                                    data-plasmic-name={"learnMore"}
                                    data-plasmic-override={overrides.learnMore}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.a,
                                      sty.learnMore
                                    )}
                                    component={Link}
                                    href={"/docs" as const}
                                    platform={"nextjs"}
                                    target={"_blank" as const}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__uYmKo
                                      )}
                                    >
                                      {"Learn more >"}
                                    </div>
                                  </p.PlasmicLink>
                                </div>
                              </div>
                            </p.Stack>
                          </p.Stack>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__yk94D
                          )}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__z8C2N)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/new_fathym_com/images/homeHeropng2.png",
                              fullWidth: 1000,
                              fullHeight: 825,
                              aspectRatio: undefined
                            }}
                          />
                        </div>
                      </p.Stack>
                    </div>
                  </p.Stack>
                </p.Stack>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__oWwfZ)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qmAqH)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tpfk)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__frd9B
                      )}
                    >
                      {"Flashup today, scale tomorrow"}
                    </h2>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__q0B9N
                    )}
                  >
                    {
                      '"Life moves pretty fast. If you don\'t stop and look around once in a while, you could miss it." - Ferris Bueller\nIncrease the tempo of development, adoption of new strategies, and get more out of your time.'
                    }
                  </div>
                </p.Stack>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__qhCsU)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5RB5Q
                  )}
                >
                  {"TAKE THE FATHYM JOURNEY"}
                </div>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__fbmz6)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__p9PXu)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__qhFjC
                    )}
                  >
                    {"1. Start with your skills"}
                  </h1>

                  <div
                    className={classNames(projectcss.all, sty.columns___9MWu)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___4GIk7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d0Eh
                        )}
                      >
                        {
                          "Developers love the frameworks they love. No matter the framework, Fathym has you covered.  Deploy with micro frontends to seamlessly use the right frameworks for the right job."
                        }
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__ibTSq)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__k4Pnd
                        )}
                      >
                        {
                          "Non-developers need a way to showcase their own skills. Whether a photo gallery, blog, or                                                          simple web presence, utilize Fathym to combine proven open source solutions and bring your ideas to life."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns__lm87A)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__aPf5)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__yls5P)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/homeYourCodepng3.png",
                          fullWidth: 400,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__svAi)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__x8Yg
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3___8Id1P
                          )}
                        >
                          {"Your code"}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cnP
                          )}
                        >
                          {
                            "Bring your sites and applications that you already have in GitHub or NPM."
                          }
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aFrw8
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__r2YuJ
                          )}
                        >
                          {"Build and deploy"}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__e7PFj
                          )}
                        >
                          {
                            "Automate devops processes behind the scenes so you get back to the good stuff."
                          }
                        </div>
                      </div>

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__pYtYk
                        )}
                        color={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("blue" as const)
                            : ("blue" as const)
                        }
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__v6Sd4
                            )}
                            role={"img"}
                          />
                        }
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("/dashboard/create-project" as const)
                            : ("/dashboard" as const)
                        }
                        showEndIcon={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? true
                            : true
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__sYUyO
                          )}
                        >
                          {"Get Started for Free"}
                        </div>
                      </Button>
                    </div>
                  </div>
                </p.Stack>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__yZTzx)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sl6Gb)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__mUOsK
                    )}
                  >
                    {"2. Use your team to do more"}
                  </h1>

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.columns__il2Y5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___0ZAJz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dKA5
                          )}
                        >
                          {
                            "Keeping up with the ebb and flow of technology is a daunting task for teams. Get more than the sum of your parts, leverage Fathym to automate your team workflows."
                          }
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__bivbk
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cXzzl
                          )}
                        >
                          {
                            "Take your experience and coding skills to new heights. Fathym will help you develop low-code solutions that enable junior and mid-                          level developers to accelerate."
                          }
                        </div>
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.columns__dC4UK)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___6SUtC
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oVhF)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/new_fathym_com/images/homeLowCodepng3.png",
                            fullWidth: 400,
                            fullHeight: 400,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___1SeJ
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bcbqm
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__f22Sx
                            )}
                          >
                            {"Low code"}
                          </h3>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__d3RcL
                            )}
                          >
                            {
                              "Use existing open source solutions or turn your code into reusable building blocks."
                            }
                          </div>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7Ul4
                          )}
                        >
                          <h3
                            className={classNames(
                              projectcss.all,
                              projectcss.h3,
                              projectcss.__wab_text,
                              sty.h3__wY4QJ
                            )}
                          >
                            {"Flashups"}
                          </h3>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hl5Tb
                            )}
                          >
                            {
                              "Micro frontend applications make it simple to create your business in a day."
                            }
                          </div>
                        </div>

                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__eiig1
                          )}
                          color={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("blue" as const)
                              : ("blue" as const)
                          }
                          endIcon={
                            <ChevronRightIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__hfcyt
                              )}
                              role={"img"}
                            />
                          }
                          link={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? ("/dashboard/create-project" as const)
                              : ("/dashboard" as const)
                          }
                          showEndIcon={
                            hasVariant(globalVariants, "screen", "mobileOnly")
                              ? true
                              : true
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3DfmH
                            )}
                          >
                            {"Get Started for Free"}
                          </div>
                        </Button>
                      </div>
                    </div>
                  ) : null}

                  <div
                    className={classNames(projectcss.all, sty.columns__tH4Rb)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__nQpi1)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__hItH8
                        )}
                      >
                        {"Compose Applications"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__pY8TY
                        )}
                      >
                        {
                          "Fathym micro frontends are a powerful tool that allow your team to use the frameworks best fit for the job.  Break free from monolithic, use open source and custom code in harmony."
                        }
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__zBwmx)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__el8Op)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/homeRoutespng3.png",
                          fullWidth: 400,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns__sDsnQ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__cfTmB)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img___3D6Ih)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/homeIteratepng3.png",
                          fullWidth: 400,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column___9GNkQ)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2___4VruU
                        )}
                      >
                        {"Engage Users"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5SMgp
                        )}
                      >
                        {
                          "Don't wait weeks and months, take hours. Build engaging user experiences that Flashup your idea. Learn from your users and rapidly react with solutions to their problems."
                        }
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ziHsz
                        )}
                      >
                        {"\n\n\n"}
                      </div>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns___9OOiB)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__xJjV4)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2___8Rk2
                        )}
                      >
                        {"Enhance Experiences"}
                      </h2>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ceZa4
                        )}
                      >
                        {
                          "Augment your applications with low-code modifiers. Bring Google Tag Manager to every application, add support chat from your CRM, or develop custom enhancements yourself. Configure and manage from a central location across all applications.\n\n"
                        }
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__zrjEk)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__hnDan)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/homeModifierpng3.png",
                          fullWidth: 400,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }}
                      />
                    </div>
                  </div>
                </p.Stack>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__b4Ye)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vMoU)}
                >
                  <h1
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1__p0FaE
                    )}
                  >
                    {"3. Scale your solutions"}
                  </h1>

                  <div
                    className={classNames(projectcss.all, sty.columns__wkBgr)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__xQqod)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dI656
                        )}
                      >
                        {
                          "You no longer need a huge budget or months to get started. Flashup your business across shared infrastructure built to scale with you and your customer's needs."
                        }
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__pe67Y)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__x2ZvW
                        )}
                      >
                        {
                          "Outgrown Fathym's shared infrastructure? Looking to bolster the value of your business? Employ all the same great tools from your own private or managed clouds."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.columns___6YfC)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__r7NmF)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__q09Nt)}
                        displayHeight={"auto" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/homeNoCodepng3.png",
                          fullWidth: 400,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }}
                      />
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.column__tc6S)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__p9FF4
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__dCgju
                          )}
                        >
                          {"No code"}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ebJf6
                          )}
                        >
                          {
                            "Build tools that streamline productivity and bring value to your customers."
                          }
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gfvBe
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__s3QPz
                          )}
                        >
                          {"Cloud scale"}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zrQGb
                          )}
                        >
                          {
                            "Flashup on shared infrastructure, grow with your customers, scale as needed."
                          }
                        </div>
                      </div>

                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__xPzhb
                        )}
                        color={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("blue" as const)
                            : ("blue" as const)
                        }
                        endIcon={
                          <ChevronRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__la8EB
                            )}
                            role={"img"}
                          />
                        }
                        link={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("/dashboard/create-project" as const)
                            : ("/dashboard" as const)
                        }
                        showEndIcon={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? true
                            : true
                        }
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8Mp4O
                          )}
                        >
                          {"Get Started for Free"}
                        </div>
                      </Button>
                    </div>
                  </div>

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.columns__ecnvs)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__crkmr
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__lxngr
                          )}
                        >
                          {"Enterprise as Code"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fa9P2
                          )}
                        >
                          {
                            "Bringing infrastructure as code, application life cycle and identity management at scale. Develop custom automations that accelerate and enable your existing teams."
                          }
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__epjv9
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__drfoR)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/new_fathym_com/images/enterpriseAsCodepng3.png",
                            fullWidth: 1120,
                            fullHeight: 670,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.columns__jBtZx)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__vxa8N
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__u7Evx)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/new_fathym_com/images/accelerateInnovationpng2.png",
                            fullWidth: 517,
                            fullHeight: 308,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__h8DcZ
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2___41Yew
                          )}
                        >
                          {"Accelerate Innovation"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d9Zt7
                          )}
                        >
                          {
                            "Fathym enhances your development workflow so your resources can can focus on the customer. Accelerate internal innovation and streamline customer engagement."
                          }
                        </div>
                      </div>
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.columns__v46Wh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__rEr9E
                        )}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__fuUed
                          )}
                        >
                          {"Enterprise Whitelabels"}
                        </h2>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ujBIr
                          )}
                        >
                          {
                            "Enable new lines of business, migrate your legacy solutions, and advance your technology today. Flashup a website in mere minutes with plug-and-play open-source apps."
                          }
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__zP9Io
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__os9Rs)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/new_fathym_com/images/enterpriseWhitelabelspng.png",
                            fullWidth: 741,
                            fullHeight: 439,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  ) : null}
                </p.Stack>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kVsdc)}
              >
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__fgN)}
                  >
                    {true ? (
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ajC5W
                        )}
                      >
                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yXK
                            )}
                          >
                            <Reveal
                              data-plasmic-name={"reveal"}
                              data-plasmic-override={overrides.reveal}
                              className={classNames(
                                "__wab_instance",
                                sty.reveal
                              )}
                              triggerOnce={false}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__b8Fw5
                                )}
                              >
                                {"Pricing plans"}
                              </div>
                            </Reveal>
                          </div>
                        ) : null}
                      </p.Stack>
                    ) : null}

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__o6K6A)}
                    >
                      <PriceCard
                        action={
                          <p.PlasmicLink
                            data-plasmic-name={"getStarted"}
                            data-plasmic-override={overrides.getStarted}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.getStarted
                            )}
                            component={Link}
                            href={
                              "https://auth.fathym.com/fathymcloudprd.onmicrosoft.com/oauth2/v2.0/authorize?p=b2c_1_sign_up_sign_in&client_id=98f014f1-2547-4bcc-a583-3edc8f1190f2&redirect_uri=https%3A%2F%2Fwww.fathym.com%2F.oauth%2FB2C_1_SIGN_UP_SIGN_IN&response_type=id_token&scope=openid%20profile&response_mode=form_post&nonce=637852938942527603.ZTI5MzAxNTctNDkwMS00MDAyLTg4ZGUtY2Y1MzQyN2E4ZWY3YjA2NDUxNjYtY2U0MS00YTM4LTk2N2QtMjM4ZWMwZmE1ZTMy&state=CfDJ8LB6wyxTK-9DjudCMQ2_rJFlZg4AjvhF4RPRGfKWlURdcDF8MzpM2NnY8xkNcWJAq-Tu1RFaa_ohgpiQPGQnsLYG4SQu4lAGl9_zboEvHtFNDJNhBt2AdgdnfMWCNkqQgQNWO9JjQjebo2wNa-VATvUSGOLcWOtXQkIo7spd3n2NoHkRvGl2PC6I9kakK3ksGZOyin0-VfRhDJKXJQvK5fDvyUnrFbb8_oTGnpKL651BifujR6CNuJC1RexCNfRQzswJoN1ckhWXyrG77ooqrTZ1JTqdaE0UUlDUGMTnpTmkm-69aoaKC7WEiF4gIq1sS8uzxTuG5rN16MElNNp4cKY&x-client-SKU=ID_NETSTANDARD2_0&x-client-ver=6.11.1.0" as const
                            }
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___4OXr9
                              )}
                            >
                              {"Start for free"}
                            </div>
                          </p.PlasmicLink>
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__z51CZ
                        )}
                        description={
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___3LYhS
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__yI5P)}
                                displayHeight={"282px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"211px" as const}
                                loading={"lazy" as const}
                                src={{
                                  src: "/plasmic/new_fathym_com/images/starterpng.png",
                                  fullWidth: 211,
                                  fullHeight: 282,
                                  aspectRatio: undefined
                                }}
                              />
                            </div>

                            {true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__xYnYw
                                )}
                              >
                                <ValueProp
                                  className={classNames(
                                    "__wab_instance",
                                    sty.valueProp__lx0OW
                                  )}
                                  description={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___9538N
                                      )}
                                    >
                                      {"Unlimited Projects"}
                                    </div>
                                  }
                                  flatIcon={true}
                                  icon={
                                    <CheckIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__x82FG
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  noTitle={true}
                                />

                                <ValueProp
                                  className={classNames(
                                    "__wab_instance",
                                    sty.valueProp__vVuMd
                                  )}
                                  description={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___00Bcw
                                      )}
                                    >
                                      {"Team Social Feed"}
                                    </div>
                                  }
                                  flatIcon={true}
                                  icon={
                                    <CheckIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__fxMh2
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  noTitle={true}
                                />

                                <ValueProp
                                  className={classNames(
                                    "__wab_instance",
                                    sty.valueProp__o5Jx
                                  )}
                                  description={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__eZHc6
                                      )}
                                    >
                                      {"Deploy any Version"}
                                    </div>
                                  }
                                  flatIcon={true}
                                  icon={
                                    <CheckIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___5Cc6V
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  noTitle={true}
                                />

                                <ValueProp
                                  className={classNames(
                                    "__wab_instance",
                                    sty.valueProp__u0Od
                                  )}
                                  description={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__omVWh
                                      )}
                                    >
                                      {"Custom Domain"}
                                    </div>
                                  }
                                  flatIcon={true}
                                  icon={
                                    <CheckIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__yhQqb
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  noTitle={true}
                                />

                                <ValueProp
                                  className={classNames(
                                    "__wab_instance",
                                    sty.valueProp__tSc4F
                                  )}
                                  description={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__tg0Z1
                                      )}
                                    >
                                      {"Free SSL"}
                                    </div>
                                  }
                                  flatIcon={true}
                                  icon={
                                    <CheckIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__kutH2
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  noTitle={true}
                                />
                              </div>
                            ) : null}
                          </React.Fragment>
                        }
                        dollars={"0"}
                      />

                      <PriceCard
                        action={
                          <p.PlasmicLink
                            data-plasmic-name={"personalPlan"}
                            data-plasmic-override={overrides.personalPlan}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.personalPlan
                            )}
                            component={Link}
                            href={
                              "https://www.fathym.com/dashboard/billing/plan/personal/month" as const
                            }
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___3Qd2H
                              )}
                            >
                              {"Buy Personal"}
                            </div>
                          </p.PlasmicLink>
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard___6Ax48
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lQ4Fq
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__t31Ac)}
                              displayHeight={"281px" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"201px" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/new_fathym_com/images/personalpng.png",
                                fullWidth: 201,
                                fullHeight: 281,
                                aspectRatio: undefined
                              }}
                            />
                          </div>
                        }
                        dollars={"8"}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5LZVp
                            )}
                          >
                            {"personal"}
                          </div>
                        }
                      />

                      <PriceCard
                        action={
                          <p.PlasmicLink
                            data-plasmic-name={"proPlan"}
                            data-plasmic-override={overrides.proPlan}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.proPlan
                            )}
                            component={Link}
                            href={
                              "https://www.fathym.com/dashboard/billing/plan/pro/month" as const
                            }
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__jfN1S
                              )}
                            >
                              {"Buy Pro"}
                            </div>
                          </p.PlasmicLink>
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard___3DfrF
                        )}
                        description={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fFzaU
                            )}
                          >
                            <p.PlasmicImg
                              alt={""}
                              className={classNames(sty.img__eKSqe)}
                              displayHeight={"260px" as const}
                              displayMaxHeight={"none" as const}
                              displayMaxWidth={"100%" as const}
                              displayMinHeight={"0" as const}
                              displayMinWidth={"0" as const}
                              displayWidth={"217px" as const}
                              loading={"lazy" as const}
                              src={{
                                src: "/plasmic/new_fathym_com/images/propng.png",
                                fullWidth: 217,
                                fullHeight: 260,
                                aspectRatio: undefined
                              }}
                            />
                          </div>
                        }
                        dollars={"30"}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3XaNk
                            )}
                          >
                            {"pro"}
                          </div>
                        }
                      />

                      <PriceCard
                        action={
                          <p.PlasmicLink
                            data-plasmic-name={"businessPlan"}
                            data-plasmic-override={overrides.businessPlan}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.businessPlan
                            )}
                            component={Link}
                            href={
                              "https://www.fathym.com/dashboard/billing/plan/business/month" as const
                            }
                            platform={"nextjs"}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___7BGi0
                              )}
                            >
                              {"Buy Business"}
                            </div>
                          </p.PlasmicLink>
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.priceCard__uToh0
                        )}
                        description={
                          true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__anuxL
                              )}
                            >
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__n0K6)}
                                displayHeight={"255px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"215px" as const}
                                loading={"lazy" as const}
                                src={{
                                  src: "/plasmic/new_fathym_com/images/businesspng.png",
                                  fullWidth: 215,
                                  fullHeight: 255,
                                  aspectRatio: undefined
                                }}
                              />
                            </div>
                          ) : null
                        }
                        dollars={"99"}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__z1P8
                            )}
                          >
                            {"business"}
                          </div>
                        }
                      />
                    </p.Stack>
                  </p.Stack>
                ) : null}
              </p.Stack>
            ) : null}
            {true ? (
              <section
                data-plasmic-name={"section"}
                data-plasmic-override={overrides.section}
                className={classNames(projectcss.all, sty.section)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground3"}
                  data-plasmic-override={overrides.foreground3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__q5Be2)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__oTyfl)}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2__xdd9P
                        )}
                      >
                        {"Why deploy with Fathym?"}
                      </h2>
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kofq
                      )}
                    >
                      {
                        "Fathym's powerful micro frontends allow work to be divided and conquered concurrently. Virtual developers handle the heavy lifting of the hosting and devops automation, saving both time and money. Plus, the ability to use multiple frameworks!\n\nDiscover new ways to maximize resources and knowledge from your team with your code, low code, and no code tools. Harness solutions from the open source universe or developed by your team."
                      }
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(projectcss.all, sty.columns__tZdYa)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__xZkHu)}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__fBfbL
                        )}
                        color={"blue" as const}
                        link={"/dashboard" as const}
                      >
                        {"Get Started for Free"}
                      </Button>
                    </div>
                  </div>
                </p.Stack>
              </section>
            ) : null}

            <FathymFooter
              data-plasmic-name={"fathymFooter"}
              data-plasmic-override={overrides.fathymFooter}
              className={classNames("__wab_instance", sty.fathymFooter)}
            />
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "learnMore",
    "reveal",
    "getStarted",
    "personalPlan",
    "proPlan",
    "businessPlan",
    "section",
    "foreground3",
    "fathymFooter"
  ],
  navbar: ["navbar"],
  learnMore: ["learnMore"],
  reveal: ["reveal"],
  getStarted: ["getStarted"],
  personalPlan: ["personalPlan"],
  proPlan: ["proPlan"],
  businessPlan: ["businessPlan"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  fathymFooter: ["fathymFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  learnMore: "a";
  reveal: typeof Reveal;
  getStarted: "a";
  personalPlan: "a";
  proPlan: "a";
  businessPlan: "a";
  section: "section";
  foreground3: "div";
  fathymFooter: typeof FathymFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPricing2__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPricing2__VariantsArgs;
    args?: PlasmicPricing2__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPricing2__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPricing2__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicPricing2__ArgProps,
          internalVariantPropNames: PlasmicPricing2__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicPricing2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPricing2";
  } else {
    func.displayName = `PlasmicPricing2.${nodeName}`;
  }
  return func;
}

export const PlasmicPricing2 = Object.assign(
  // Top-level PlasmicPricing2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    learnMore: makeNodeComponent("learnMore"),
    reveal: makeNodeComponent("reveal"),
    getStarted: makeNodeComponent("getStarted"),
    personalPlan: makeNodeComponent("personalPlan"),
    proPlan: makeNodeComponent("proPlan"),
    businessPlan: makeNodeComponent("businessPlan"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    fathymFooter: makeNodeComponent("fathymFooter"),

    // Metadata about props expected for PlasmicPricing2
    internalVariantProps: PlasmicPricing2__VariantProps,
    internalArgProps: PlasmicPricing2__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Fathym - Develop & Deploy modern web experiences with your team",
      description:
        "Fathym offers a free plan for getting started and more advanced plans as you scale and grow. ",
      ogImageSrc:
        "https://site-assets.plasmic.app/65bb7cdffb000dff2e366ce2b60dcbbb.png",
      canonical: ""
    }
  }
);

export default PlasmicPricing2;
/* prettier-ignore-end */
