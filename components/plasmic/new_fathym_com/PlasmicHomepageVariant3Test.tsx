// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: jbURxL3XuiMBQsLhf7apui
// Component: rmSsRbVcB-9
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: C-c1_GprIs0E/component
import Button from "../../Button"; // plasmic-import: PDN2xmv-0aRn/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal"; // plasmic-import: R6s1FdhksG/codeComponent
import FathymFooter from "../../FathymFooter"; // plasmic-import: 3jTJ0D37Jf/component

import { useScreenVariants as useScreenVariantsbzFq34BwReL2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: BzFq34bwReL2/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_new_fathym_com.module.css"; // plasmic-import: jbURxL3XuiMBQsLhf7apui/projectcss
import sty from "./PlasmicHomepageVariant3Test.module.css"; // plasmic-import: rmSsRbVcB-9/css

import AppleIcon from "./icons/PlasmicIcon__Apple"; // plasmic-import: lodHYqINbTbi/icon
import ChevronRightIcon from "./icons/PlasmicIcon__ChevronRight"; // plasmic-import: gpmIqNjGKjYR/icon

export type PlasmicHomepageVariant3Test__VariantMembers = {};

export type PlasmicHomepageVariant3Test__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepageVariant3Test__VariantsArgs;
export const PlasmicHomepageVariant3Test__VariantProps =
  new Array<VariantPropType>();

export type PlasmicHomepageVariant3Test__ArgsType = {};
type ArgPropType = keyof PlasmicHomepageVariant3Test__ArgsType;
export const PlasmicHomepageVariant3Test__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepageVariant3Test__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  h1?: p.Flex<"h1">;
  svg?: p.Flex<"svg">;
  learnMore?: p.Flex<"a"> & Partial<LinkProps>;
  link?: p.Flex<"a"> & Partial<LinkProps>;
  ol?: p.Flex<"ol">;
  section?: p.Flex<"section">;
  foreground3?: p.Flex<"div">;
  fathymFooter?: p.Flex<typeof FathymFooter>;
};

export interface DefaultHomepageVariant3TestProps {}

export const defaultHomepageVariant3Test__Args: Partial<PlasmicHomepageVariant3Test__ArgsType> =
  {};

function PlasmicHomepageVariant3Test__RenderFunc(props: {
  variants: PlasmicHomepageVariant3Test__VariantsArgs;
  args: PlasmicHomepageVariant3Test__ArgsType;
  overrides: PlasmicHomepageVariant3Test__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;
  const args = Object.assign({}, defaultHomepageVariant3Test__Args, props.args);
  const $props = args;
  const $ctx = ph.useDataEnv?.() || {};

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbzFq34BwReL2()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">
          {"Fathym - Develop & Deploy modern web experiences with your team"}
        </title>
        <meta
          key="og:title"
          property="og:title"
          content={
            "Fathym - Develop & Deploy modern web experiences with your team"
          }
        />
        <meta
          key="description"
          property="og:description"
          name="description"
          content={
            "Fathym is a platform for hosting, managing and deploying Jamstack sites and web applications with the utmost flexibility and speed."
          }
        />
        <meta
          key="og:image"
          property="og:image"
          content={
            "https://site-assets.plasmic.app/0ea48039573264deaac2bf1ff587c1cc.png"
          }
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <div className={classNames(projectcss.all, sty.columns__pWpqt)}>
            <div className={classNames(projectcss.all, sty.column__k9KSv)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kkWb)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fGV)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___9AKEm)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.columns___266P9
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__xf487
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bvKsF
                          )}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cFsEl
                            )}
                          >
                            <h1
                              data-plasmic-name={"h1"}
                              data-plasmic-override={overrides.h1}
                              className={classNames(
                                projectcss.all,
                                projectcss.h1,
                                projectcss.__wab_text,
                                sty.h1
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>
                                  {"Deliver stunning sites with the "}
                                </React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#5856D6" }}
                                >
                                  {"utmost flexibility and speed."}
                                </span>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </h1>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__tDnC
                              )}
                            >
                              <React.Fragment>
                                <React.Fragment>{""}</React.Fragment>
                                <h2
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.h2,
                                    projectcss.__wab_text,
                                    sty.h2___91SbE
                                  )}
                                >
                                  <React.Fragment>
                                    <React.Fragment>
                                      {
                                        "Developers use Fathym to host, manage and deploy future-proof web projects and applications â€“ "
                                      }
                                    </React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{
                                        fontWeight: 700,
                                        color: "#5856D6"
                                      }}
                                    >
                                      {"powered by Azure"}
                                    </span>
                                    <React.Fragment>
                                      {
                                        " â€“ with the flexibility and speed the modern web demands.\n\n"
                                      }
                                    </React.Fragment>
                                  </React.Fragment>
                                </h2>
                                <React.Fragment>{""}</React.Fragment>
                              </React.Fragment>
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                sty.columns__n2Fvz
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column__dCSdY
                                )}
                              >
                                <Button
                                  className={classNames(
                                    "__wab_instance",
                                    sty.button__lKlv
                                  )}
                                  color={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mobileOnly"
                                    )
                                      ? ("blue" as const)
                                      : ("blue" as const)
                                  }
                                  endIcon={
                                    <ChevronRightIcon
                                      data-plasmic-name={"svg"}
                                      data-plasmic-override={overrides.svg}
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  link={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mobileOnly"
                                    )
                                      ? ("/dashboard/create-project" as const)
                                      : ("/dashboard" as const)
                                  }
                                  showEndIcon={
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mobileOnly"
                                    )
                                      ? true
                                      : true
                                  }
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__wy011
                                    )}
                                  >
                                    {"Get Started for Free"}
                                  </div>
                                </Button>
                              </div>

                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.column__ddNe
                                )}
                              >
                                <p.PlasmicLink
                                  data-plasmic-name={"learnMore"}
                                  data-plasmic-override={overrides.learnMore}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.a,
                                    sty.learnMore
                                  )}
                                  component={Link}
                                  href={"/docs" as const}
                                  platform={"nextjs"}
                                  target={"_blank" as const}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___0Faao
                                    )}
                                  >
                                    {"Learn more >"}
                                  </div>
                                </p.PlasmicLink>
                              </div>
                            </div>

                            {(
                              hasVariant(globalVariants, "screen", "mobileOnly")
                                ? true
                                : true
                            ) ? (
                              <Reveal
                                className={classNames(
                                  "__wab_instance",
                                  sty.reveal__wyLv
                                )}
                                direction={"left" as const}
                                effect={"slide" as const}
                                triggerOnce={false}
                              >
                                {(
                                  hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobileOnly"
                                  )
                                    ? true
                                    : true
                                ) ? (
                                  <p.PlasmicImg
                                    alt={""}
                                    className={classNames(sty.img__asb8S)}
                                    displayHeight={"auto" as const}
                                    displayMaxHeight={"none" as const}
                                    displayMaxWidth={"100%" as const}
                                    displayMinHeight={"0" as const}
                                    displayMinWidth={"0" as const}
                                    displayWidth={"auto" as const}
                                    loading={"lazy" as const}
                                    src={{
                                      src: "/plasmic/new_fathym_com/images/dashboardImage1Gif.gif",
                                      fullWidth: 1048,
                                      fullHeight: 1110,
                                      aspectRatio: undefined
                                    }}
                                  />
                                ) : null}
                              </Reveal>
                            ) : null}
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </p.Stack>
                  </div>
                </p.Stack>
              </p.Stack>
            </div>

            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : true
            ) ? (
              <div className={classNames(projectcss.all, sty.column__kp8IR)}>
                <Reveal
                  className={classNames("__wab_instance", sty.reveal__eMcWw)}
                  direction={"right" as const}
                  triggerOnce={false}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__kaCyh)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/new_fathym_com/images/dashboardImage1Svg.svg",
                      fullWidth: 142,
                      fullHeight: 150,
                      aspectRatio: 0.943472
                    }}
                  />
                </Reveal>
              </div>
            ) : null}
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__cVzYe)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rOUj)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__aWj9Z
                )}
              >
                {"Say goodbye to unwieldy frontend monoliths."}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___1Nbvq
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      " \n\nFathym automates CI/CD builds, hosting and deployment so you can focus on building Jamstack sites or Single Page Applications with the JavaScript frameworks, Static Site Generators or no code builders you love. \n\nSteer clear of clunky frontend monoliths.\n\n"
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {
                      "Break your web project down into smaller and more manageable pieces for independent, flexible and scalable builds and deployments. "
                    }
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
            </p.Stack>
          </div>

          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox___59GSh)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jQpZq
                )}
              >
                {"TAKE THE FATHYM JOURNEY"}
              </div>
            </div>
          ) : null}

          <div className={classNames(projectcss.all, sty.freeBox__farFl)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___7SpDz)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___7HUdJ
                )}
              >
                {"1. Start with your code."}
              </h2>

              <div className={classNames(projectcss.all, sty.columns__muDez)}>
                <div className={classNames(projectcss.all, sty.column__m0126)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7BYMg
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "Getting started is as simple as connecting your GitHub repository. \n\n"
                        }
                      </React.Fragment>
                      <p.PlasmicLink
                        data-plasmic-name={"link"}
                        data-plasmic-override={overrides.link}
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.link
                        )}
                        component={Link}
                        href={
                          "https://www.fathym.com/dashboard/create-project" as const
                        }
                        platform={"nextjs"}
                        target={"_blank" as const}
                      >
                        {"Select an open-source recipe"}
                      </p.PlasmicLink>
                      <React.Fragment>
                        {
                          " from your favorite frameworks or static site generators see Fathym in action or bring in your own code."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__hsPgE)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.columns__fzovy)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__t9U3L
                        )}
                      >
                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__wcEmw
                          )}
                        >
                          {"Your code."}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5AVsC
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {
                                "Bring your sites and applications that you already have in"
                              }
                            </React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#5856D6" }}
                            >
                              {" "}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700, color: "#5856D6" }}
                            >
                              {"GitHub"}
                            </span>
                            <React.Fragment>{" or "}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700, color: "#5856D6" }}
                            >
                              {"NPM"}
                            </span>
                            <React.Fragment>{"."}</React.Fragment>
                          </React.Fragment>
                        </div>

                        <h3
                          className={classNames(
                            projectcss.all,
                            projectcss.h3,
                            projectcss.__wab_text,
                            sty.h3__s6Rrz
                          )}
                        >
                          {"Build and deploy."}
                        </h3>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kn2D8
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>
                              {"Let us handle the "}
                            </React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700, color: "#5856D6" }}
                            >
                              {"automated build pipelines and deployments"}
                            </span>
                            <React.Fragment>{""}</React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 700 }}
                            >
                              {" "}
                            </span>
                            <React.Fragment>
                              {
                                "behind the scenes so you can stick to the good stuff."
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__rAicW
                        )}
                      >
                        <Reveal
                          className={classNames(
                            "__wab_instance",
                            sty.reveal__kActz
                          )}
                          direction={"right" as const}
                          triggerOnce={false}
                        >
                          <p.PlasmicImg
                            alt={""}
                            className={classNames(sty.img__nf09Y)}
                            displayHeight={"auto" as const}
                            displayMaxHeight={"none" as const}
                            displayMaxWidth={"100%" as const}
                            displayMinHeight={"0" as const}
                            displayMinWidth={"0" as const}
                            displayWidth={"auto" as const}
                            loading={"lazy" as const}
                            src={{
                              src: "/plasmic/new_fathym_com/images/gettingStartedImagesvg.svg",
                              fullWidth: 170,
                              fullHeight: 150,
                              aspectRatio: 1.136662
                            }}
                          />
                        </Reveal>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__jY9X)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dUuQj)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__u2I7H
                )}
              >
                {"2. Break it down."}
              </h2>

              {true ? (
                <div className={classNames(projectcss.all, sty.columns__jDUn8)}>
                  <div
                    className={classNames(projectcss.all, sty.column__sal8P)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q2EaS
                      )}
                    >
                      {
                        "Break website projects down into smaller apps with individual repositories and automated build pipelines for:  \n\n"
                      }
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rZyTf
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        <ol
                          data-plasmic-name={"ol"}
                          data-plasmic-override={overrides.ol}
                          className={classNames(
                            projectcss.all,
                            projectcss.ol,
                            sty.ol
                          )}
                        >
                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__iSlmE
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"Smaller, more cohesive, decoupled "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700, color: "#5856D6" }}
                              >
                                {"codebases."}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </li>

                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__d6QgW
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"Smaller, faster "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700, color: "#5856D6" }}
                              >
                                {"builds."}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </li>

                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__emM9A
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"Simple testing, version control and "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700, color: "#5856D6" }}
                              >
                                {"release management."}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </li>

                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__pDmlc
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"Incremental upgrades and independent "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700, color: "#5856D6" }}
                              >
                                {"deployments."}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                            </React.Fragment>
                          </li>

                          <li
                            className={classNames(
                              projectcss.all,
                              projectcss.li,
                              projectcss.__wab_text,
                              sty.li__nqNwt
                            )}
                          >
                            <React.Fragment>
                              <React.Fragment>
                                {"Flexibility to fork and "}
                              </React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700, color: "#5856D6" }}
                              >
                                {"re-use modular apps"}
                              </span>
                              <React.Fragment>
                                {" for other projects."}
                              </React.Fragment>
                            </React.Fragment>
                          </li>
                        </ol>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
              ) : null}

              <div className={classNames(projectcss.all, sty.columns__e7QV)}>
                <div className={classNames(projectcss.all, sty.column__p8NfS)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___0T55H
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__u1MSh
                        )}
                      >
                        {"You're a composer."}
                      </h3>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </h2>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cvXnT
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "Build with the freedom to use different JavaScript frameworks, Static Site Generators or even no code builders on the one site. \n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, color: "#000000" }}
                      >
                        {"Use the right framework for the right job. "}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {" "}
                      </span>
                      <React.Fragment>
                        {
                          "\n\nFathym effortlessly brings your projectâ€™s apps together to compose one cohesive and seamless website or web app on your custom domain. "
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__t5AuA)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__vgCn)}
                    direction={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("left" as const)
                        : ("right" as const)
                    }
                    effect={"slide" as const}
                    triggerOnce={true}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___5NvVz)}
                      displayHeight={"auto" as const}
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? ("400px" as const)
                          : ("auto" as const)
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/new_fathym_com/images/mfeTree10Sgif.gif",
                        fullWidth: 600,
                        fullHeight: 600,
                        aspectRatio: undefined
                      }}
                    />
                  </Reveal>
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__zzdsr)}>
            <div className={classNames(projectcss.all, sty.freeBox___5P5Ru)}>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___2Ng2C
                )}
              >
                {"3. Deploy with confidence."}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__p4Wn7
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <React.Fragment>{"The "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700, color: "#5856D6" }}
                    >
                      {"Fathym Global Edge Network"}
                    </span>
                    <React.Fragment>
                      {
                        " leverages Azure CDN to deliver your content and sites to the global points closest to your users. \n\nTake advantage of independent builds and deployments so you can work concurrently on your web project.\n\nUpdate to any version of your apps with version control, and easily rollback when things go awry without impacting your production site. \n\n"
                      }
                    </React.Fragment>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <React.Fragment>{"The "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700, color: "#5856D6" }}
                    >
                      {"Fathym Global Edge Network"}
                    </span>
                    <React.Fragment>
                      {
                        " leverages the Azure CDN to deliver your content and sites to the global points closest to your users. \n\nTake advantage of "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#5856D6", fontWeight: 700 }}
                    >
                      {"independent builds and deployments"}
                    </span>
                    <React.Fragment>
                      {
                        " so you can work concurrently on your web project.\n\nUpdate to any version of your apps with version control, and easily rollback when things go awry without impacting your production site. \n\n"
                      }
                    </React.Fragment>
                  </React.Fragment>
                )}
              </div>

              <div className={classNames(projectcss.all, sty.columns___7F8Qj)}>
                <div className={classNames(projectcss.all, sty.column__noKk)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <Reveal
                      className={classNames(
                        "__wab_instance",
                        sty.reveal__xh6IL
                      )}
                      direction={"right" as const}
                      triggerOnce={false}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__aJnz7)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/new_fathym_com/images/processorDetailspng.png",
                            fullWidth: 1180,
                            fullHeight: 1026,
                            aspectRatio: undefined
                          }}
                        />
                      ) : null}
                    </Reveal>
                  ) : null}

                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__cUmX)}
                    direction={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("right" as const)
                        : undefined
                    }
                    effect={"slide" as const}
                    triggerOnce={false}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__woUxC)}
                        displayHeight={"400px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobileOnly")
                            ? ("100%" as const)
                            : ("auto" as const)
                        }
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/processorDetailsgif.gif",
                          fullWidth: 1158,
                          fullHeight: 1006,
                          aspectRatio: undefined
                        }}
                      />
                    ) : null}
                  </Reveal>
                </div>

                <div className={classNames(projectcss.all, sty.column__nUq6Z)}>
                  {(
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? true
                      : true
                  ) ? (
                    <Reveal
                      className={classNames("__wab_instance", sty.reveal__dCWm)}
                      direction={"left" as const}
                      triggerOnce={false}
                    >
                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? true
                          : true
                      ) ? (
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__gbgKe)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/new_fathym_com/images/routes2Png.png",
                            fullWidth: 624,
                            fullHeight: 626,
                            aspectRatio: undefined
                          }}
                        />
                      ) : null}
                    </Reveal>
                  ) : null}

                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__wVshl)}
                    direction={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? ("left" as const)
                        : ("right" as const)
                    }
                    effect={"slide" as const}
                    triggerOnce={false}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : true
                    ) ? (
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__xhqWq)}
                        displayHeight={"400px" as const}
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={"auto" as const}
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/new_fathym_com/images/routesImagegif.gif",
                          fullWidth: 1158,
                          fullHeight: 1006,
                          aspectRatio: undefined
                        }}
                      />
                    ) : null}
                  </Reveal>
                </div>
              </div>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__g9N3N)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5XduE)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___5WJyl
                )}
              >
                {"4. Scale as you grow."}
              </h2>

              <div className={classNames(projectcss.all, sty.columns__eAbfJ)}>
                <div className={classNames(projectcss.all, sty.column__uRtKl)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n2Ie9
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {"Get started for free in a \n"}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700, color: "#5856D6" }}
                        >
                          {"shared infrastructure environment"}
                        </span>
                        <React.Fragment>
                          {
                            " built to scale with you and your customer's needs.\n\nOutgrown Fathym's shared infrastructure?\n\nEmploy all the same great tools from your own "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700, color: "#5856D6" }}
                        >
                          {"managed or private Azure clouds."}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <React.Fragment>
                          {"Get started for free in a "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700, color: "#5856D6" }}
                        >
                          {"shared infrastructure environment"}
                        </span>
                        <React.Fragment>
                          {
                            " built to scale with you and your customer's needs.\n\nOutgrown Fathym's shared infrastructure?\n\nEmploy all the same great tools from your own "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700, color: "#5856D6" }}
                        >
                          {"managed or private Azure clouds."}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    )}
                  </div>
                </div>

                <div className={classNames(projectcss.all, sty.column__yb6K)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fSsyG
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "Take advantage of our simplified developer experience while scaling to your own Azure cloud with full access to your own infrastructure and the full range and power of Azure's extensive services.\n\n"
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, color: "#5856D6" }}
                      >
                        {
                          "Build a future-proof tech stack from the get go without the complexity. "
                        }
                      </span>
                      <React.Fragment>{"\n\n\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, color: "#5856D6" }}
                      >
                        {""}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__a1EzJ)}>
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__fWo1Z
              )}
            >
              {"Stay in sync with your team."}
            </h2>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__df1JK
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "Collaborating and keeping updated with your teammateâ€™s builds, pull requests and deploys has never been easier than through our"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {" interactive social feed"}
                </span>
                <React.Fragment>{".  \n\nFathym offers "}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"one consolidated workflow"}
                </span>
                <React.Fragment>
                  {
                    " for you to view and manage your web projects and their corresponding repositories and builds."
                  }
                </React.Fragment>
              </React.Fragment>
            </div>

            <Reveal
              className={classNames("__wab_instance", sty.reveal___442N)}
              effect={"bounce" as const}
              triggerOnce={false}
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__cyleg)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("295px" as const)
                    : ("548px" as const)
                }
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? ("100%" as const)
                    : ("auto" as const)
                }
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/new_fathym_com/images/dashboardFullsvg.svg",
                  fullWidth: 215,
                  fullHeight: 150,
                  aspectRatio: 1.434492
                }}
              />
            </Reveal>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__rA2Uf)}>
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__n4JgO
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {"Leverage the power of Azure\n"}
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#5856D6" }}
                >
                  {"minus the complexity."}
                </span>
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </h2>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___51Vb
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "Fathym leverages Azure for the most advanced, enterprise-grade infrastructure and world class "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"performance, reliability and security. "}
                </span>
                <React.Fragment>
                  {"\n\nControl who accesses your apps through out-of-the-box "}
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"authentication"}
                </span>
                <React.Fragment>{" and"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {" "}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {"identity management."}
                </span>
                <React.Fragment>
                  {
                    "\n\nAs you scale and need the flexibility and full range of services that only the big cloud providers offer, we'll"
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#5856D6" }}
                >
                  {" "}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#5856D6", fontWeight: 700 }}
                >
                  {
                    "automate best practice infrastructure in your own Azure environment."
                  }
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontWeight: 700 }}
                >
                  {" "}
                </span>
                <React.Fragment>{""}</React.Fragment>
              </React.Fragment>
            </div>
          </div>

          <Reveal
            className={classNames("__wab_instance", sty.reveal__qHuiO)}
            duration={1500 as const}
            effect={"fade" as const}
            triggerOnce={true}
          >
            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__qPcUo)}
              displayHeight={"auto" as const}
              displayMaxHeight={"none" as const}
              displayMaxWidth={"100%" as const}
              displayMinHeight={"0" as const}
              displayMinWidth={"0" as const}
              displayWidth={"980px" as const}
              loading={"lazy" as const}
              src={{
                src: "/plasmic/new_fathym_com/images/microFrontendWFathym2Gif.gif",
                fullWidth: 1346,
                fullHeight: 864,
                aspectRatio: undefined
              }}
            />
          </Reveal>

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <p.Stack
              as={"div"}
              data-plasmic-name={"foreground3"}
              data-plasmic-override={overrides.foreground3}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground3)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fZgm)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__srNOl)}>
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__pyhUu
                    )}
                  >
                    {"Why deploy with Fathym?"}
                  </h2>
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oqq2X
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "Fathym's powerful micro frontends allow work to be divided and conquered concurrently. Virtual developers handle the heavy lifting of the hosting and DevOps automation, saving you time and money. \n\nPlus, the freedom to use multiple frameworks, static site generators or no code builders on the one project!\n\n"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {
                        "Take advantage of Fathym's streamlined PaaS developer experience while future proofing your tech stack in the knowledge that you can scale to your own automated Azure cloud when ready."
                      }
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                  </React.Fragment>
                </div>
              </p.Stack>

              <div className={classNames(projectcss.all, sty.columns__b2Jkr)}>
                <div className={classNames(projectcss.all, sty.column__sHrOh)}>
                  <Button
                    className={classNames("__wab_instance", sty.button__t9NLe)}
                    color={"blue" as const}
                    link={"/dashboard" as const}
                  >
                    {"Get Started for Free"}
                  </Button>
                </div>
              </div>
            </p.Stack>
          </section>

          <FathymFooter
            data-plasmic-name={"fathymFooter"}
            data-plasmic-override={overrides.fathymFooter}
            className={classNames("__wab_instance", sty.fathymFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "h1",
    "svg",
    "learnMore",
    "link",
    "ol",
    "section",
    "foreground3",
    "fathymFooter"
  ],
  navbar: ["navbar"],
  h1: ["h1"],
  svg: ["svg"],
  learnMore: ["learnMore"],
  link: ["link"],
  ol: ["ol"],
  section: ["section", "foreground3"],
  foreground3: ["foreground3"],
  fathymFooter: ["fathymFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  h1: "h1";
  svg: "svg";
  learnMore: "a";
  link: "a";
  ol: "ol";
  section: "section";
  foreground3: "div";
  fathymFooter: typeof FathymFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepageVariant3Test__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepageVariant3Test__VariantsArgs;
    args?: PlasmicHomepageVariant3Test__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepageVariant3Test__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepageVariant3Test__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepageVariant3Test__ArgProps,
      internalVariantPropNames: PlasmicHomepageVariant3Test__VariantProps
    });

    return PlasmicHomepageVariant3Test__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepageVariant3Test";
  } else {
    func.displayName = `PlasmicHomepageVariant3Test.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepageVariant3Test = Object.assign(
  // Top-level PlasmicHomepageVariant3Test renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    h1: makeNodeComponent("h1"),
    svg: makeNodeComponent("svg"),
    learnMore: makeNodeComponent("learnMore"),
    link: makeNodeComponent("link"),
    ol: makeNodeComponent("ol"),
    section: makeNodeComponent("section"),
    foreground3: makeNodeComponent("foreground3"),
    fathymFooter: makeNodeComponent("fathymFooter"),

    // Metadata about props expected for PlasmicHomepageVariant3Test
    internalVariantProps: PlasmicHomepageVariant3Test__VariantProps,
    internalArgProps: PlasmicHomepageVariant3Test__ArgProps
  }
);

export default PlasmicHomepageVariant3Test;
/* prettier-ignore-end */
